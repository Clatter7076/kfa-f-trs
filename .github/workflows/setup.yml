name: Setup and Launch Brave Browser with Cloudflare Tunnel

on:
  push:

jobs:
  setup-and-launch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4
        with:
          lfs: 'true'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y x11vnc xvfb unzip 7zip

      - name: Install Brave Browser
        run: |
          sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main" | sudo tee /etc/apt/sources.list.d/brave-browser-release.list
          sudo apt-get update
          sudo apt-get install -y brave-browser

      - name: Extract BraveSoftware.zip
        run: |
          mkdir -p ~/.config
          7z x -p"${{ secrets.BRAVE_ZIP_PASSWORD }}" BraveSoftware.zip -o~/.config

      - name: Install Cloudflared
        run: |
          sudo wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb

      - name: Setup Cloudflare credentials
        run: |
          mkdir -p ~/.cloudflared
          echo "${{ secrets.CLOUDFLARE_CERT_PEM }}" > ~/.cloudflared/cert.pem
          chmod 600 ~/.cloudflared/cert.pem

      - name: Start Xvfb
        run: |
          export DISPLAY=:99
          Xvfb :99 -screen 0 1024x768x16 &

      - name: Start x11vnc
        run: |
          export DISPLAY=:99
          x11vnc -display :99 -N -forever -shared &

      - name: Launch Brave Browser
        run: |
          export DISPLAY=:99
          nohup brave-browser --no-sandbox "${{ secrets.SECRET_URL }}" &

      - name: Check and Create Cloudflare Tunnel if Needed
        run: |
          if ! cloudflared tunnel list | grep -q "github-actions-tunnel"; then
            echo "Tunnel does not exist. Creating a new tunnel..."
            cloudflared tunnel create github-actions-tunnel
            TUNNEL_ID=$(cloudflared tunnel list | grep "github-actions-tunnel" | awk '{print $1}')
            echo "Tunnel ID is $TUNNEL_ID"

            cat << EOF > ~/.cloudflared/config.yml
            tunnel: $TUNNEL_ID
            credentials-file: /home/runner/.cloudflared/$TUNNEL_ID.json
            
            ingress:
              - hostname: vnc.softwarerat.tech
                service: tcp://localhost:5900
              - service: http_status:404
            EOF

            echo "Config file created for the new tunnel."
          else
            echo "Tunnel already exists. Using existing configuration."
          fi

      - name: Start Cloudflared Tunnel
        run: |
          nohup cloudflared tunnel --config ~/.cloudflared/config.yml run github-actions-tunnel &
          sleep 10 # Give it time to start

      - name: Output Tunnel URL (Custom Domain)
        run: |
          echo "The VNC server is available at vnc.softwarerat.tech"

      # Infinite wait step to prevent job completion while keeping services running
      - name: Wait indefinitely
        run: |
          while true; do sleep 1000; done
