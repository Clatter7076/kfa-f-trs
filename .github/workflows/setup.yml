name: Setup and Launch Brave Browser with Cloudflare Tunnel

on:
  push:

jobs:
  setup-and-launch:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the main repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Step 2: Install necessary dependencies
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y x11vnc xvfb unzip p7zip-full

      # Step 3: Install Brave Browser
      - name: Install Brave Browser
        run: |
          sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main" | sudo tee /etc/apt/sources.list.d/brave-browser-release.list
          sudo apt-get update
          sudo apt-get install -y brave-browser

      # Step 4: Extract BraveSoftware.zip
      - name: Extract BraveSoftware.zip
        run: |
          mkdir -p ~/.config
          7z x -p"${{ secrets.BRAVE_ZIP_PASSWORD }}" BraveSoftware.zip -o~/.config

      # Step 5: Install Cloudflared
      - name: Install Cloudflared
        run: |
          sudo wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb

      # Step 6: Setup Cloudflare Credentials
      - name: Setup Cloudflare Credentials
        run: |
          mkdir -p ~/.cloudflared
          echo "${{ secrets.CLOUDFLARE_CERT_PEM }}" > ~/.cloudflared/cert.pem
          chmod 600 ~/.cloudflared/cert.pem

      # Step 7: Start Xvfb
      - name: Start Xvfb
        run: |
          export DISPLAY=:99
          Xvfb :99 -screen 0 1024x768x16 &

      # Step 8: Start x11vnc
      - name: Start x11vnc
        run: |
          export DISPLAY=:99
          x11vnc -display :99 -N -forever -shared &

      # Step 9: Launch Brave Browser
      - name: Launch Brave Browser
        run: |
          export DISPLAY=:99
          nohup brave-browser --no-sandbox "${{ secrets.SECRET_URL }}" &

      # Step 10: Create Cloudflare Tunnel Configuration and Route DNS
      - name: Create Cloudflare Tunnel Configuration and Route DNS
        run: |
          # Ensure Cloudflared is authenticated
          cloudflared tunnel login

          # Create or use existing tunnel
          cloudflared tunnel create github-actions-tunnel
          TUNNEL_ID=$(cloudflared tunnel list | grep "github-actions-tunnel" | awk '{print $1}')
          echo "Tunnel ID: $TUNNEL_ID"

          # Create config.yml using multiple echo statements for proper indentation
          mkdir -p ~/.cloudflared
          echo "tunnel: $TUNNEL_ID" > ~/.cloudflared/config.yml
          echo "credentials-file: /home/runner/.cloudflared/$TUNNEL_ID.json" >> ~/.cloudflared/config.yml
          echo "" >> ~/.cloudflared/config.yml
          echo "ingress:" >> ~/.cloudflared/config.yml
          echo "  - hostname: \"${{ secrets.VNC_HOSTNAME }}\"" >> ~/.cloudflared/config.yml
          echo "    service: tcp://localhost:5900" >> ~/.cloudflared/config.yml
          echo "  - service: http_status:404" >> ~/.cloudflared/config.yml

          echo "Cloudflare tunnel configuration created."

          # Route the tunnel to your custom domain using Cloudflared CLI
          echo "Routing tunnel to your custom domain..."
          cloudflared tunnel route dns github-actions-tunnel "${{ secrets.VNC_HOSTNAME }}"
          echo "DNS record created successfully."

      # Step 11: Start Cloudflared Tunnel
      - name: Start Cloudflared Tunnel
        run: |
          nohup cloudflared tunnel --config ~/.cloudflared/config.yml run github-actions-tunnel &
          sleep 10  # Allow time for the tunnel to establish

      # Step 12: Keep Services Running Indefinitely
      - name: Keep Services Running
        run: |
          while true; do sleep 1000; done
